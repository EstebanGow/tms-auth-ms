name: Cloud Run Deployment Flow
concurrency: ${{ github.event.repository.name }}-main
on:
  push:
    branches:
      - 'master'
env:
  SERVICE_NAME: tms-auth-ms
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  REGION: us-central1
  ENV_FILE: env/main.env
  ENV: dev
  HOST: localhost
  MEMORY: 512Mi
  CPU: 1
  ALLOW_UNAUTHENTICATED: true
  DOMAIN: tms
  SUB_DOMAIN: example

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Build and deploy to Cloud Run
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - uses: actions/setup-node@v4
        with:
          node-version: '>=20.9.0'
          
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          
      - name: Install dependencies
        run: yarn install
        
      - name: Build application
        run: yarn build
          
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
          
      - name: Authorize Docker push
        run: gcloud auth configure-docker
        
      - name: Create ENV File
        run: |
          mkdir -p env
          echo "PROJECT_ID=${{ env.PROJECT_ID }}" >> ${{ env.ENV_FILE }}
          echo "SERVICE_NAME=${{ env.SERVICE_NAME }}" >> ${{ env.ENV_FILE }}
          echo "HOST=${{ env.HOST }}" >> ${{ env.ENV_FILE }}
          echo "DOMAIN=${{ env.DOMAIN }}" >> ${{ env.ENV_FILE }}
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> ${{ env.ENV_FILE }}
          echo "ENV=dev" >> ${{ env.ENV_FILE }}
          echo "PG_PORT=${{ secrets.PG_PORT }}" >> ${{ env.ENV_FILE }}
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> ${{ env.ENV_FILE }}
          echo "POSTGRES_PASS=${{ secrets.POSTGRES_PASS }}" >> ${{ env.ENV_FILE }}
          echo "POSTGRES_DATABASE=${{ secrets.POSTGRES_DATABASE }}" >> ${{ env.ENV_FILE }}
          echo "PORT=8080" >> ${{ env.ENV_FILE }}
          echo "PREFIX_LOGGER=cm" >> ${{ env.ENV_FILE }}
          echo "LOGGER_LEVEL=debug" >> ${{ env.ENV_FILE }}
          echo "VERSION=v1" >> ${{ env.ENV_FILE }}
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> ${{ env.ENV_FILE }}
          cp ${{ env.ENV_FILE }} .env
        
      - name: Build and push Docker image
        run: |
          echo "Building Docker image..."
          docker build -t gcr.io/${{ env.PROJECT_ID }}/yohan-${{ env.SERVICE_NAME }}:${{ github.sha }} .
          echo "Pushing Docker image..."
          docker push gcr.io/${{ env.PROJECT_ID }}/yohan-${{ env.SERVICE_NAME }}:${{ github.sha }}
          
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: yohan-${{ env.SERVICE_NAME }}
          image: gcr.io/${{ env.PROJECT_ID }}/yohan-${{ env.SERVICE_NAME }}:${{ github.sha }}
          region: ${{ env.REGION }}
          flags: |
            --memory=${{ env.MEMORY }}
            --cpu=${{ env.CPU }}
            --platform=managed
            --allow-unauthenticated
            --set-env-vars=ENV=${{ env.ENV }},DOMAIN=${{ env.DOMAIN }}
            
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}